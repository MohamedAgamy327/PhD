using Microsoft.EntityFrameworkCore.Migrations;

namespace Data.Migrations
{
    public partial class UniversityTypeTables : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<int>(
                name: "Type",
                table: "Researchs",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 119, 86, 12, 97, 80, 100, 68, 184, 178, 51, 177, 135, 39, 167, 254, 246, 58, 163, 177, 158, 63, 139, 220, 80, 195, 188, 245, 96, 35, 40, 212, 199, 4, 157, 22, 115, 196, 120, 73, 110, 103, 232, 202, 137, 170, 35, 200, 118, 141, 184, 172, 205, 53, 118, 176, 77, 187, 181, 42, 99, 169, 68, 211, 196 }, new byte[] { 113, 22, 110, 254, 197, 172, 98, 149, 240, 81, 7, 120, 199, 204, 68, 91, 243, 167, 156, 64, 175, 85, 210, 73, 162, 113, 35, 130, 60, 207, 93, 74, 219, 245, 20, 118, 94, 156, 0, 105, 84, 89, 12, 128, 78, 61, 110, 174, 120, 238, 237, 48, 24, 137, 94, 220, 100, 69, 213, 168, 186, 10, 142, 91, 5, 205, 197, 248, 206, 138, 247, 184, 209, 166, 75, 130, 238, 39, 19, 74, 169, 24, 227, 195, 12, 97, 35, 39, 232, 138, 91, 75, 25, 180, 12, 128, 30, 87, 163, 237, 43, 179, 79, 250, 192, 76, 130, 39, 220, 121, 44, 196, 33, 81, 39, 209, 71, 60, 122, 229, 22, 159, 32, 148, 213, 142, 98, 240 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "Type",
                table: "Researchs");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 209, 240, 91, 94, 6, 28, 26, 127, 251, 159, 183, 71, 207, 205, 104, 108, 244, 160, 26, 118, 141, 215, 18, 77, 46, 71, 23, 59, 168, 4, 28, 152, 155, 164, 225, 207, 217, 99, 219, 202, 147, 54, 165, 75, 37, 86, 194, 156, 199, 18, 72, 47, 5, 29, 164, 77, 113, 247, 237, 26, 136, 40, 179, 233 }, new byte[] { 40, 108, 44, 26, 153, 102, 99, 21, 229, 3, 138, 5, 30, 163, 143, 237, 58, 128, 133, 164, 49, 172, 4, 248, 84, 247, 247, 57, 147, 70, 120, 255, 237, 64, 222, 137, 89, 230, 130, 129, 40, 130, 1, 151, 191, 109, 244, 51, 160, 225, 104, 237, 55, 167, 15, 25, 26, 130, 122, 80, 153, 108, 10, 78, 174, 200, 207, 154, 50, 169, 138, 247, 87, 22, 195, 71, 59, 216, 141, 211, 181, 194, 40, 185, 39, 15, 239, 201, 252, 19, 184, 140, 75, 197, 254, 83, 179, 154, 31, 113, 211, 155, 141, 177, 173, 107, 193, 37, 122, 159, 229, 236, 16, 123, 35, 70, 91, 232, 64, 79, 65, 174, 107, 138, 47, 131, 100, 235 } });
        }
    }
}
