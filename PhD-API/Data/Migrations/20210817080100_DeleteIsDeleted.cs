using Microsoft.EntityFrameworkCore.Migrations;

namespace Data.Migrations
{
    public partial class DeleteIsDeleted : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "IsDeleted",
                table: "Researchs");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 8, 104, 137, 45, 8, 185, 192, 92, 196, 40, 87, 248, 230, 50, 234, 176, 134, 107, 62, 52, 54, 246, 218, 222, 2, 23, 41, 100, 157, 7, 140, 49, 88, 121, 71, 102, 8, 69, 37, 96, 135, 90, 166, 60, 186, 239, 106, 224, 51, 51, 65, 123, 22, 31, 58, 164, 129, 67, 163, 67, 18, 179, 1, 78 }, new byte[] { 178, 213, 35, 101, 165, 61, 250, 233, 85, 140, 245, 141, 107, 250, 228, 59, 151, 58, 65, 212, 100, 185, 208, 187, 102, 23, 41, 252, 28, 241, 98, 151, 76, 65, 208, 214, 93, 207, 100, 26, 163, 38, 157, 79, 138, 164, 57, 228, 164, 232, 122, 142, 169, 49, 95, 250, 82, 37, 207, 31, 78, 140, 18, 81, 57, 240, 13, 147, 107, 165, 114, 174, 156, 48, 55, 181, 102, 174, 182, 54, 124, 25, 218, 212, 145, 170, 19, 161, 119, 217, 32, 20, 189, 207, 204, 57, 59, 191, 142, 236, 89, 140, 237, 35, 119, 141, 117, 112, 64, 80, 131, 17, 78, 144, 189, 203, 108, 247, 216, 124, 128, 147, 157, 249, 19, 90, 120, 215 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<bool>(
                name: "IsDeleted",
                table: "Researchs",
                type: "bit",
                nullable: true,
                defaultValue: false);

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 222, 1, 54, 245, 110, 82, 4, 72, 129, 50, 8, 75, 245, 136, 87, 53, 152, 2, 254, 22, 161, 188, 21, 218, 4, 239, 245, 156, 250, 144, 127, 177, 212, 73, 202, 227, 9, 130, 208, 35, 164, 117, 157, 232, 171, 7, 59, 189, 50, 180, 234, 232, 116, 40, 20, 123, 131, 83, 63, 223, 201, 194, 242, 121 }, new byte[] { 184, 151, 78, 115, 227, 44, 109, 227, 18, 178, 83, 107, 196, 103, 26, 121, 52, 175, 85, 253, 217, 123, 104, 12, 47, 162, 245, 122, 36, 250, 170, 229, 29, 47, 192, 181, 47, 220, 103, 108, 219, 12, 189, 21, 173, 129, 131, 83, 192, 240, 254, 120, 232, 203, 225, 218, 173, 14, 101, 133, 85, 197, 69, 187, 140, 73, 119, 160, 149, 4, 222, 209, 119, 113, 37, 235, 189, 45, 158, 12, 153, 199, 42, 200, 27, 123, 89, 122, 64, 25, 71, 204, 59, 185, 76, 5, 40, 186, 64, 246, 91, 213, 65, 52, 152, 188, 176, 51, 66, 161, 32, 200, 75, 118, 50, 143, 147, 85, 241, 140, 24, 48, 4, 170, 193, 208, 110, 227 } });
        }
    }
}
