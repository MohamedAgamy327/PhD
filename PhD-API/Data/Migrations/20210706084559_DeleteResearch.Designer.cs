// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210706084559_DeleteResearch")]
    partial class DeleteResearch
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Domain.Entities.Research", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BachelorsResearchersNumber")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FullTimeEmployeesNumber")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsRandomPassword")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("MastersResearchersNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartTimeEmployeesNumber")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("PhDResearchersNumber")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TechniciansNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Researchs");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRandomPassword")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Admin@gmail.com",
                            IsRandomPassword = true,
                            Name = "Admin",
                            PasswordHash = new byte[] { 8, 119, 166, 127, 182, 126, 75, 207, 75, 33, 28, 202, 152, 170, 255, 193, 235, 141, 118, 144, 64, 180, 81, 241, 64, 182, 9, 73, 22, 39, 156, 100, 223, 205, 206, 254, 1, 93, 105, 43, 24, 243, 214, 172, 66, 253, 97, 132, 198, 15, 193, 167, 122, 37, 232, 13, 131, 90, 98, 218, 4, 253, 125, 23 },
                            PasswordSalt = new byte[] { 116, 225, 88, 171, 80, 26, 78, 121, 236, 47, 236, 112, 158, 205, 213, 38, 152, 36, 93, 132, 30, 209, 192, 74, 148, 159, 33, 156, 26, 14, 85, 157, 42, 12, 54, 30, 76, 234, 55, 116, 144, 30, 28, 137, 74, 204, 125, 10, 119, 68, 19, 161, 120, 64, 55, 26, 119, 225, 31, 216, 162, 21, 195, 35, 114, 107, 177, 150, 122, 35, 134, 224, 114, 220, 158, 170, 145, 33, 123, 41, 142, 218, 99, 17, 132, 234, 187, 17, 217, 160, 35, 43, 211, 33, 211, 127, 214, 207, 81, 61, 209, 12, 249, 240, 57, 49, 123, 83, 135, 33, 199, 53, 130, 31, 132, 223, 195, 156, 90, 155, 201, 212, 8, 231, 195, 49, 90, 232 },
                            Role = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
