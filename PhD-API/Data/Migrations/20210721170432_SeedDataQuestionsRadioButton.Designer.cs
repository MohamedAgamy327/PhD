// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210721170432_SeedDataQuestionsRadioButton")]
    partial class SeedDataQuestionsRadioButton
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Domain.Entities.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "بحث أساسي",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "بحث تطبيقي",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "تطوير تجريبي ",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = " مستوى الشركة (أو المؤسسة الانتاجية ))",
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 5,
                            Content = "مستوى الصناعة  (أو القطاع الانتاجى )",
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 6,
                            Content = "مستوى الاقتصاد الوطنى ",
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 7,
                            Content = "مستوى اقليمى أو دولى  (المشروعات المشتركة ) ",
                            QuestionId = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "3- نوع النشاط البحثى:",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Content = "7- مستوى التطبيق البحثى",
                            Type = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Research", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BachelorsResearchersNumber")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FullTimeEmployeesNumber")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsRandomPassword")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("MastersResearchersNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartTimeEmployeesNumber")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("PhDResearchersNumber")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TechniciansNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Researchs");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRandomPassword")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Admin@gmail.com",
                            IsRandomPassword = true,
                            Name = "Admin",
                            PasswordHash = new byte[] { 88, 63, 15, 172, 186, 77, 168, 4, 131, 107, 4, 16, 150, 37, 4, 248, 89, 71, 108, 208, 40, 155, 178, 112, 178, 39, 204, 157, 83, 18, 114, 186, 38, 164, 149, 247, 64, 15, 181, 156, 124, 1, 209, 136, 180, 88, 208, 139, 239, 145, 28, 219, 43, 52, 248, 89, 250, 182, 170, 204, 158, 97, 155, 35 },
                            PasswordSalt = new byte[] { 39, 119, 254, 63, 155, 89, 79, 199, 71, 235, 50, 46, 212, 141, 242, 185, 146, 159, 118, 95, 201, 9, 100, 44, 137, 115, 237, 129, 230, 205, 193, 96, 196, 141, 170, 175, 81, 166, 207, 234, 64, 207, 51, 16, 119, 136, 85, 251, 56, 129, 79, 129, 42, 152, 75, 157, 88, 252, 85, 1, 244, 147, 83, 61, 119, 213, 203, 135, 171, 14, 148, 116, 92, 20, 3, 253, 175, 101, 169, 74, 177, 91, 243, 80, 236, 2, 138, 81, 81, 60, 203, 243, 41, 179, 119, 234, 231, 15, 139, 162, 10, 195, 173, 124, 54, 76, 130, 200, 17, 33, 52, 139, 31, 62, 78, 107, 36, 31, 182, 36, 89, 8, 242, 244, 229, 242, 99, 167 },
                            Role = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Answer", b =>
                {
                    b.HasOne("Domain.Entities.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Domain.Entities.Question", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
