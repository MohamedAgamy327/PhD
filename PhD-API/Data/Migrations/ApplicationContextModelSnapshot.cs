// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Domain.Entities.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "العلوم الطبيعية",
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 2,
                            Content = "العلوم الزراعية والبيطرية",
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 3,
                            Content = "العلوم الإنسانية",
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 4,
                            Content = "العلوم الاجتماعية",
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 5,
                            Content = "هندسة وتكنولوجيا",
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 6,
                            Content = "العلوم الطبية والصحية",
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 7,
                            Content = "بحث أساسي",
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 8,
                            Content = "بحث تطبيقي",
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 9,
                            Content = "تطوير تجريبي",
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 10,
                            Content = "أكاديمية (جامعة/ مؤسسة بحثية/ معهد علمى)",
                            QuestionId = 6
                        },
                        new
                        {
                            Id = 11,
                            Content = "صناعية (وحدة انتاجية/ قطاع انتاجى/ صناعة)",
                            QuestionId = 6
                        },
                        new
                        {
                            Id = 12,
                            Content = "جهات غير هادفة للربح (مؤسسة مجتمع مدنى)",
                            QuestionId = 6
                        },
                        new
                        {
                            Id = 13,
                            Content = "جهات دولية أو اقليمية",
                            QuestionId = 6
                        },
                        new
                        {
                            Id = 14,
                            Content = " مستوى الشركة (أو المؤسسة الانتاجية ))",
                            QuestionId = 7
                        },
                        new
                        {
                            Id = 15,
                            Content = "مستوى الصناعة  (أو القطاع الانتاجى )",
                            QuestionId = 7
                        },
                        new
                        {
                            Id = 16,
                            Content = "مستوى الاقتصاد الوطنى",
                            QuestionId = 7
                        },
                        new
                        {
                            Id = 17,
                            Content = "مستوى اقليمى أو دولى  (المشروعات المشتركة )",
                            QuestionId = 7
                        },
                        new
                        {
                            Id = 18,
                            Content = "8-1- زيادة في حجم الانتاج",
                            QuestionId = 8
                        },
                        new
                        {
                            Id = 19,
                            Content = "8-2- تحسين مستوى الخدمة أوالمنتج",
                            QuestionId = 8
                        },
                        new
                        {
                            Id = 20,
                            Content = "8-3- تطوير عملية الإنتاج",
                            QuestionId = 8
                        },
                        new
                        {
                            Id = 21,
                            Content = "8-4- زيادة في حجم المبيعات",
                            QuestionId = 8
                        },
                        new
                        {
                            Id = 22,
                            Content = "8-5- تحسين في أساليب الإدارة والتسويق",
                            QuestionId = 8
                        },
                        new
                        {
                            Id = 23,
                            Content = "منتج جديد (أو محسن بشكل كبير)",
                            QuestionId = 9
                        },
                        new
                        {
                            Id = 24,
                            Content = "عملية إنتاجية جديدة (أو محسنة بشكل كبير)",
                            QuestionId = 9
                        },
                        new
                        {
                            Id = 25,
                            Content = "تنظيم وإدارة جديدة ",
                            QuestionId = 9
                        },
                        new
                        {
                            Id = 26,
                            Content = "أساليب تسويق جديدة",
                            QuestionId = 9
                        },
                        new
                        {
                            Id = 27,
                            Content = "10-1- البرمجيات وقواعد البيانات",
                            QuestionId = 10
                        },
                        new
                        {
                            Id = 28,
                            Content = "10-2- عائد حقوق الملكية والنشر",
                            QuestionId = 10
                        },
                        new
                        {
                            Id = 29,
                            Content = "10-3- براءات اختراع/ تصميمات صناعية ",
                            QuestionId = 10
                        },
                        new
                        {
                            Id = 30,
                            Content = "10-4- منتجات إبداعية وثقافية",
                            QuestionId = 10
                        },
                        new
                        {
                            Id = 31,
                            Content = "10-5- علامة تجارية",
                            QuestionId = 10
                        },
                        new
                        {
                            Id = 32,
                            Content = "10-6-اعادة تأهيل أو تدريب عدد من الباحثين او المستفيدين من المشروع",
                            QuestionId = 10
                        },
                        new
                        {
                            Id = 33,
                            Content = "12-1- تحسين معدلات الانتاج أو المبيعات",
                            QuestionId = 12
                        },
                        new
                        {
                            Id = 34,
                            Content = "12-2- تحسين العمليات الانتاجية",
                            QuestionId = 12
                        },
                        new
                        {
                            Id = 35,
                            Content = "12-3- تحسين في أساليب الادارة والانتاج",
                            QuestionId = 12
                        },
                        new
                        {
                            Id = 36,
                            Content = "13-1- مجال البرمجيات ونظم الحاسب وقواعد البيانات",
                            QuestionId = 13
                        },
                        new
                        {
                            Id = 37,
                            Content = "13-2- الاستفادة من براءات الاختراع أو تصميمات صناعية",
                            QuestionId = 13
                        },
                        new
                        {
                            Id = 38,
                            Content = "13-3- تحسين في كفاءة العمالة (بفعل التدريب)",
                            QuestionId = 13
                        },
                        new
                        {
                            Id = 39,
                            Content = "13-4-تحسن في أساليب الإدارة والتنظيم والتسويق",
                            QuestionId = 13
                        },
                        new
                        {
                            Id = 40,
                            Content = "16-1-خدمات تجارة الجملة والتجزئة والفنادق والغذاء",
                            QuestionId = 16
                        },
                        new
                        {
                            Id = 41,
                            Content = "16-2-خدمات النقل والتخزين والاصلاح",
                            QuestionId = 16
                        },
                        new
                        {
                            Id = 42,
                            Content = "16-3-الخدمات المالية والتأمين",
                            QuestionId = 16
                        },
                        new
                        {
                            Id = 43,
                            Content = "16-4-خدمات قطاع الأعمال والعقار",
                            QuestionId = 16
                        },
                        new
                        {
                            Id = 44,
                            Content = "16-5-خدمات البحث والتطوير",
                            QuestionId = 16
                        },
                        new
                        {
                            Id = 45,
                            Content = "16-6-خدمات المعلومات والاتصالات والنشر والاعلام",
                            QuestionId = 16
                        },
                        new
                        {
                            Id = 46,
                            Content = "17-1-التعليم والتدريب وبناء القدرات",
                            QuestionId = 17
                        },
                        new
                        {
                            Id = 47,
                            Content = "17-2-خدمات الصحة والرعاية الصحية",
                            QuestionId = 17
                        },
                        new
                        {
                            Id = 48,
                            Content = "17-3-خدمات ثقافية وفنية وترفيهية",
                            QuestionId = 17
                        },
                        new
                        {
                            Id = 49,
                            Content = "17-4-الادارة العامة والدفاع والأمن",
                            QuestionId = 17
                        },
                        new
                        {
                            Id = 50,
                            Content = "17-5-خدمات شخصية وعائلية",
                            QuestionId = 17
                        },
                        new
                        {
                            Id = 51,
                            Content = "4-1- التمويل المتاح من أكاديمية البحث العلمي (بالجنيه المصري)",
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 52,
                            Content = "4-2- التمويل المتاح من مصادر أخرى (بالجنيه المصري)",
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 53,
                            Content = "14-1-نسبة الانخفاض في تكلفة العمالة %",
                            QuestionId = 14
                        },
                        new
                        {
                            Id = 54,
                            Content = "14-2-نسبة الانخفاض في تكلفة المدخلات الوسيطة %",
                            QuestionId = 14
                        },
                        new
                        {
                            Id = 55,
                            Content = "14-3-نسبة الانخفاض في استهلاك الوقود (غاز/ كهرباء) %",
                            QuestionId = 14
                        },
                        new
                        {
                            Id = 56,
                            Content = "14-4-نسبة الانخفاض في استهلاك المياه %",
                            QuestionId = 14
                        },
                        new
                        {
                            Id = 57,
                            Content = "14-5-مصروفات عامة أخرى %",
                            QuestionId = 14
                        },
                        new
                        {
                            Id = 58,
                            Content = "15-1-الأرض والمباني",
                            QuestionId = 15
                        },
                        new
                        {
                            Id = 59,
                            Content = "15-2-الآلات والمعدات والمعامل وأجهزة الكمبيوتر",
                            QuestionId = 15
                        });
                });

            modelBuilder.Entity("Domain.Entities.AnswerCheckbox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AnswerId")
                        .HasColumnType("int");

                    b.Property<bool>("Checked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("ResearchId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId");

                    b.HasIndex("ResearchId");

                    b.ToTable("AnswerCheckboxs");
                });

            modelBuilder.Entity("Domain.Entities.AnswerMultiAmount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("AnswerId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("ResearchId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId");

                    b.HasIndex("ResearchId");

                    b.ToTable("AnswerMultiAmounts");
                });

            modelBuilder.Entity("Domain.Entities.AnswerMultiCheckbox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AnswerId")
                        .HasColumnType("int");

                    b.Property<bool>("Checked1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("Checked2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<bool>("Radio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("ResearchId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId");

                    b.HasIndex("ResearchId");

                    b.ToTable("AnswerMultiCheckboxs");
                });

            modelBuilder.Entity("Domain.Entities.AnswerMultiPercentage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AnswerId")
                        .HasColumnType("int");

                    b.Property<double?>("Number1")
                        .HasColumnType("float");

                    b.Property<double?>("Number2")
                        .HasColumnType("float");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<bool>("Radio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("ResearchId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId");

                    b.HasIndex("ResearchId");

                    b.ToTable("AnswerMultiPercentages");
                });

            modelBuilder.Entity("Domain.Entities.AnswerNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Number")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("ResearchId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResearchId");

                    b.ToTable("AnswerNumbers");
                });

            modelBuilder.Entity("Domain.Entities.AnswerRadio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AnswerId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("ResearchId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId");

                    b.HasIndex("ResearchId");

                    b.ToTable("AnswerRadios");
                });

            modelBuilder.Entity("Domain.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Content = "2- مجال البحث والتطوير التجريبي لهذا المشروع: (يمكن ان يقوم المشروع البحثي على مجال بحثي واحد أو اكثر)",
                            Order = 2,
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "3- نوع النشاط البحثى:",
                            Order = 3,
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            Content = "4- إجمالي التمويل المتاح لهذا المشروع (بالجنيه المصري)",
                            Order = 4,
                            Type = 3
                        },
                        new
                        {
                            Id = 5,
                            Content = "5- الفترة الزمنية المحددة لتنفيذ هذا المشروع (عدد الشهور)",
                            Order = 5,
                            Type = 2
                        },
                        new
                        {
                            Id = 6,
                            Content = "6- الجهات المنفذه لهذا المشروع",
                            Order = 6,
                            Type = 1
                        },
                        new
                        {
                            Id = 7,
                            Content = "7- مستوى التطبيق البحثى",
                            Order = 7,
                            Type = 0
                        },
                        new
                        {
                            Id = 8,
                            Content = "8- هل قمتم (او من المتوقع) تطوير احد المنتجات (سلعة أو خدمة) من خلال المشروع  ومخرجاته؟، من فضلك حدد نوع التطوير من خلال أحد الخيارات الأتية ",
                            Order = 8,
                            Type = 1
                        },
                        new
                        {
                            Id = 9,
                            Content = "9-هل تم التوصل الى احد الابتكارات الأتية",
                            Order = 9,
                            Type = 1
                        },
                        new
                        {
                            Id = 10,
                            Content = "10 – هل تم من خلال مخرجات المشروع الاستثمار  في أحد الأصول غير الملموسة؟ ما هي هذه الأصول؟ من خلال أحد الخيارات الأتية",
                            Order = 10,
                            Type = 1
                        },
                        new
                        {
                            Id = 12,
                            Content = "12- هل هناك وفورات خارجية (انعكاسات غير مباشرة) متولدة من المشروع (او متوقع تولدها)؟، ما هو نوع هذه العوائد  من خلال احد الخيارات التالية",
                            Order = 12,
                            Type = 1
                        },
                        new
                        {
                            Id = 13,
                            Content = "13-هل تم الاستفادةبوفورات خارجية (تأثير غير مباشر) من خلال مدة المشروع (أو كما متوقع) من الأصول غير الملموسة المتولدة من تطبيق المشروع (او متوقع تولدها)؟، ما هو نوع هذه الأصول من خلال احد الخيارات التالية",
                            Order = 13,
                            Type = 1
                        },
                        new
                        {
                            Id = 14,
                            Content = "14- هل أثر هذا المشروع على تخفيض تكلفة الانفاق الجاري ؟",
                            Order = 14,
                            Type = 4
                        },
                        new
                        {
                            Id = 15,
                            Content = "15-هل أثر هذا المشروع على تخفيض تكلفة الانفاق الرأسمالي (او من المتوقع تخفيضه)؟ ، في أي التكاليف تم الانخفاض من خلال احد الخيارات التالية",
                            Order = 15,
                            Type = 5
                        },
                        new
                        {
                            Id = 16,
                            Content = "16-هل يحسن نتائج ومخرجات المشروع من اي من الخدمات الانتاجية؟ ، في أي خدمات الانتاج تم تحسينها من خلال احد الخيارات التالية:",
                            Order = 16,
                            Type = 1
                        },
                        new
                        {
                            Id = 17,
                            Content = "17-       هل تحسن نتائج اومخرجات المشروع (او من المتوقع ان تحسن) من اي من الخدمات الاجتماعية والثقافية والشخصية ؟ ، في أي الخدمات الاجتماعية والثقافية والشخصية تم تحسينها من خلال احد الخيارات التالية",
                            Order = 17,
                            Type = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.Research", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AnswersCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int?>("BachelorsResearchersNumber")
                        .HasColumnType("int");

                    b.Property<bool>("CanEdit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Field")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Final")
                        .HasColumnType("float");

                    b.Property<double?>("First")
                        .HasColumnType("float");

                    b.Property<int?>("FullTimeEmployeesNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsRandomPassword")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int?>("MastersResearchersNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PartTimeEmployeesNumber")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("PhDResearchersNumber")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Program")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Q10")
                        .HasColumnType("float");

                    b.Property<double?>("Q12")
                        .HasColumnType("float");

                    b.Property<double?>("Q13")
                        .HasColumnType("float");

                    b.Property<double?>("Q14")
                        .HasColumnType("float");

                    b.Property<double?>("Q15")
                        .HasColumnType("float");

                    b.Property<double?>("Q16")
                        .HasColumnType("float");

                    b.Property<double?>("Q17")
                        .HasColumnType("float");

                    b.Property<double?>("Q8")
                        .HasColumnType("float");

                    b.Property<double?>("Q9")
                        .HasColumnType("float");

                    b.Property<double?>("Second")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("TechniciansNumber")
                        .HasColumnType("int");

                    b.Property<double?>("Third")
                        .HasColumnType("float");

                    b.Property<int>("UniversityType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Researchs");
                });

            modelBuilder.Entity("Domain.Entities.ResearchQuestion", b =>
                {
                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("ResearchId")
                        .HasColumnType("int");

                    b.Property<bool>("Answered")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("QuestionId", "ResearchId");

                    b.HasIndex("ResearchId");

                    b.ToTable("ResearchsQuestions");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRandomPassword")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Admin@gmail.com",
                            IsRandomPassword = true,
                            Name = "Admin",
                            PasswordHash = new byte[] { 144, 0, 34, 227, 174, 196, 154, 71, 241, 227, 101, 206, 217, 89, 192, 193, 235, 69, 69, 89, 218, 83, 202, 238, 6, 28, 165, 248, 144, 58, 33, 7, 23, 235, 40, 46, 212, 84, 48, 225, 87, 148, 28, 226, 160, 135, 174, 227, 253, 32, 100, 253, 40, 163, 114, 40, 74, 120, 31, 55, 54, 252, 212, 61 },
                            PasswordSalt = new byte[] { 27, 75, 51, 192, 142, 19, 67, 20, 185, 135, 77, 210, 197, 184, 90, 215, 4, 0, 55, 169, 133, 31, 172, 53, 8, 149, 183, 130, 64, 126, 191, 121, 128, 222, 235, 141, 112, 126, 150, 45, 213, 61, 54, 11, 194, 85, 123, 50, 253, 200, 168, 196, 124, 10, 54, 60, 53, 67, 137, 77, 251, 212, 153, 89, 13, 113, 254, 238, 156, 132, 88, 7, 4, 222, 208, 184, 149, 189, 89, 8, 243, 22, 202, 121, 25, 109, 235, 114, 217, 109, 200, 199, 95, 4, 155, 90, 192, 70, 15, 34, 162, 149, 82, 15, 141, 12, 20, 178, 187, 83, 48, 117, 222, 110, 74, 228, 216, 56, 18, 48, 170, 73, 35, 75, 137, 218, 212, 148 },
                            Role = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Answer", b =>
                {
                    b.HasOne("Domain.Entities.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Domain.Entities.AnswerCheckbox", b =>
                {
                    b.HasOne("Domain.Entities.Answer", "Answer")
                        .WithMany("AnswerCheckboxs")
                        .HasForeignKey("AnswerId");

                    b.HasOne("Domain.Entities.Research", "Research")
                        .WithMany("AnswerCheckboxs")
                        .HasForeignKey("ResearchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Answer");

                    b.Navigation("Research");
                });

            modelBuilder.Entity("Domain.Entities.AnswerMultiAmount", b =>
                {
                    b.HasOne("Domain.Entities.Answer", "Answer")
                        .WithMany("AnswerMultiAmounts")
                        .HasForeignKey("AnswerId");

                    b.HasOne("Domain.Entities.Research", "Research")
                        .WithMany("AnswerMultiAmounts")
                        .HasForeignKey("ResearchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Answer");

                    b.Navigation("Research");
                });

            modelBuilder.Entity("Domain.Entities.AnswerMultiCheckbox", b =>
                {
                    b.HasOne("Domain.Entities.Answer", "Answer")
                        .WithMany("AnswerMultiCheckboxs")
                        .HasForeignKey("AnswerId");

                    b.HasOne("Domain.Entities.Research", "Research")
                        .WithMany("AnswerMultiCheckboxs")
                        .HasForeignKey("ResearchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Answer");

                    b.Navigation("Research");
                });

            modelBuilder.Entity("Domain.Entities.AnswerMultiPercentage", b =>
                {
                    b.HasOne("Domain.Entities.Answer", "Answer")
                        .WithMany("AnswerMultiPercentages")
                        .HasForeignKey("AnswerId");

                    b.HasOne("Domain.Entities.Research", "Research")
                        .WithMany("AnswerMultiPercentages")
                        .HasForeignKey("ResearchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Answer");

                    b.Navigation("Research");
                });

            modelBuilder.Entity("Domain.Entities.AnswerNumber", b =>
                {
                    b.HasOne("Domain.Entities.Research", "Research")
                        .WithMany("AnswerNumbers")
                        .HasForeignKey("ResearchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Research");
                });

            modelBuilder.Entity("Domain.Entities.AnswerRadio", b =>
                {
                    b.HasOne("Domain.Entities.Answer", "Answer")
                        .WithMany("AnswerRadios")
                        .HasForeignKey("AnswerId");

                    b.HasOne("Domain.Entities.Research", "Research")
                        .WithMany("AnswerRadios")
                        .HasForeignKey("ResearchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Answer");

                    b.Navigation("Research");
                });

            modelBuilder.Entity("Domain.Entities.ResearchQuestion", b =>
                {
                    b.HasOne("Domain.Entities.Question", "Question")
                        .WithMany("ResearchsQuestions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Research", "Research")
                        .WithMany("ResearchsQuestions")
                        .HasForeignKey("ResearchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("Research");
                });

            modelBuilder.Entity("Domain.Entities.Answer", b =>
                {
                    b.Navigation("AnswerCheckboxs");

                    b.Navigation("AnswerMultiAmounts");

                    b.Navigation("AnswerMultiCheckboxs");

                    b.Navigation("AnswerMultiPercentages");

                    b.Navigation("AnswerRadios");
                });

            modelBuilder.Entity("Domain.Entities.Question", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("ResearchsQuestions");
                });

            modelBuilder.Entity("Domain.Entities.Research", b =>
                {
                    b.Navigation("AnswerCheckboxs");

                    b.Navigation("AnswerMultiAmounts");

                    b.Navigation("AnswerMultiCheckboxs");

                    b.Navigation("AnswerMultiPercentages");

                    b.Navigation("AnswerNumbers");

                    b.Navigation("AnswerRadios");

                    b.Navigation("ResearchsQuestions");
                });
#pragma warning restore 612, 618
        }
    }
}
