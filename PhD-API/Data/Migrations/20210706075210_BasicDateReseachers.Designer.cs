// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210706075210_BasicDateReseachers")]
    partial class BasicDateReseachers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Domain.Entities.Research", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BachelorsResearchersNumber")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FullTimeEmployeesNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsRandomPassword")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("MastersResearchersNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartTimeEmployeesNumber")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("PhDResearchersNumber")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TechniciansNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Researchs");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRandomPassword")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Admin@gmail.com",
                            IsRandomPassword = true,
                            Name = "Admin",
                            PasswordHash = new byte[] { 144, 227, 199, 146, 119, 89, 134, 200, 75, 202, 216, 66, 106, 170, 194, 209, 165, 213, 209, 235, 88, 200, 161, 105, 229, 45, 117, 95, 224, 157, 193, 167, 186, 218, 156, 22, 213, 105, 92, 222, 60, 140, 254, 180, 126, 179, 136, 33, 64, 178, 221, 202, 180, 64, 12, 129, 52, 192, 117, 94, 151, 238, 190, 94 },
                            PasswordSalt = new byte[] { 35, 39, 137, 198, 153, 11, 18, 117, 185, 0, 27, 23, 205, 90, 22, 181, 29, 36, 89, 17, 212, 49, 240, 24, 0, 220, 105, 86, 127, 189, 79, 6, 84, 159, 11, 226, 82, 120, 57, 106, 65, 59, 8, 25, 12, 31, 116, 46, 210, 128, 43, 201, 227, 171, 253, 16, 19, 139, 255, 22, 114, 34, 152, 62, 212, 61, 135, 162, 100, 35, 64, 103, 155, 217, 179, 52, 230, 251, 236, 28, 155, 247, 47, 223, 126, 154, 29, 91, 155, 243, 200, 5, 104, 45, 46, 238, 143, 48, 198, 147, 147, 75, 244, 126, 230, 85, 60, 57, 88, 238, 52, 150, 108, 173, 213, 71, 118, 174, 25, 94, 236, 139, 12, 97, 159, 220, 233, 63 },
                            Role = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
